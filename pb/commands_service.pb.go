// Code generated by protoc-gen-go. DO NOT EDIT.
// source: commands_service.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	commands_service.proto

It has these top-level messages:
	Command
	Param
	Error
	Result
	CommandsRequest
	CommandsResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command struct {
	Name   string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Params []*Param `protobuf:"bytes,2,rep,name=params" json:"params,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Command) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Command) GetParams() []*Param {
	if m != nil {
		return m.Params
	}
	return nil
}

type Param struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *Param) Reset()                    { *m = Param{} }
func (m *Param) String() string            { return proto.CompactTextString(m) }
func (*Param) ProtoMessage()               {}
func (*Param) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Param) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Param) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Param) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Error struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Result struct {
	RequestId string   `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Timestamp int64    `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Errors    []*Error `protobuf:"bytes,3,rep,name=errors" json:"errors,omitempty"`
	Params    []*Param `protobuf:"bytes,4,rep,name=params" json:"params,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Result) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Result) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Result) GetErrors() []*Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

func (m *Result) GetParams() []*Param {
	if m != nil {
		return m.Params
	}
	return nil
}

type CommandsRequest struct {
	Signature string     `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	Timestamp int64      `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Async     bool       `protobuf:"varint,3,opt,name=async" json:"async,omitempty"`
	Commands  []*Command `protobuf:"bytes,4,rep,name=commands" json:"commands,omitempty"`
}

func (m *CommandsRequest) Reset()                    { *m = CommandsRequest{} }
func (m *CommandsRequest) String() string            { return proto.CompactTextString(m) }
func (*CommandsRequest) ProtoMessage()               {}
func (*CommandsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CommandsRequest) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *CommandsRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CommandsRequest) GetAsync() bool {
	if m != nil {
		return m.Async
	}
	return false
}

func (m *CommandsRequest) GetCommands() []*Command {
	if m != nil {
		return m.Commands
	}
	return nil
}

type CommandsResponse struct {
	RequestId string    `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Timestamp int64     `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Results   []*Result `protobuf:"bytes,3,rep,name=results" json:"results,omitempty"`
}

func (m *CommandsResponse) Reset()                    { *m = CommandsResponse{} }
func (m *CommandsResponse) String() string            { return proto.CompactTextString(m) }
func (*CommandsResponse) ProtoMessage()               {}
func (*CommandsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CommandsResponse) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *CommandsResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CommandsResponse) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Command)(nil), "pb.Command")
	proto.RegisterType((*Param)(nil), "pb.Param")
	proto.RegisterType((*Error)(nil), "pb.Error")
	proto.RegisterType((*Result)(nil), "pb.Result")
	proto.RegisterType((*CommandsRequest)(nil), "pb.CommandsRequest")
	proto.RegisterType((*CommandsResponse)(nil), "pb.CommandsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Commands service

type CommandsClient interface {
	Exec(ctx context.Context, in *CommandsRequest, opts ...grpc.CallOption) (*CommandsResponse, error)
}

type commandsClient struct {
	cc *grpc.ClientConn
}

func NewCommandsClient(cc *grpc.ClientConn) CommandsClient {
	return &commandsClient{cc}
}

func (c *commandsClient) Exec(ctx context.Context, in *CommandsRequest, opts ...grpc.CallOption) (*CommandsResponse, error) {
	out := new(CommandsResponse)
	err := grpc.Invoke(ctx, "/pb.Commands/Exec", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Commands service

type CommandsServer interface {
	Exec(context.Context, *CommandsRequest) (*CommandsResponse, error)
}

func RegisterCommandsServer(s *grpc.Server, srv CommandsServer) {
	s.RegisterService(&_Commands_serviceDesc, srv)
}

func _Commands_Exec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommandsServer).Exec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Commands/Exec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommandsServer).Exec(ctx, req.(*CommandsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Commands_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Commands",
	HandlerType: (*CommandsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Exec",
			Handler:    _Commands_Exec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "commands_service.proto",
}

func init() { proto.RegisterFile("commands_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x4d, 0x93, 0xb4, 0xcd, 0xed, 0x42, 0x19, 0x8b, 0x04, 0x51, 0x68, 0x83, 0x60, 0x57,
	0x5d, 0xb4, 0x0f, 0xa0, 0x20, 0x5d, 0xb8, 0x93, 0x79, 0x81, 0x32, 0x4d, 0x87, 0x12, 0xe8, 0x24,
	0xe3, 0xdc, 0x49, 0xb1, 0xcf, 0xa0, 0x0f, 0x2d, 0xf3, 0x67, 0x2a, 0x28, 0x2e, 0xdc, 0xcd, 0x3d,
	0x27, 0xc9, 0x77, 0xee, 0xc9, 0xc0, 0x55, 0xd9, 0x08, 0xc1, 0xea, 0x2d, 0xae, 0x91, 0xab, 0x43,
	0x55, 0xf2, 0xb9, 0x54, 0x8d, 0x6e, 0x48, 0x4f, 0x6e, 0x8a, 0x47, 0x18, 0x3c, 0x39, 0x97, 0x10,
	0x48, 0x6a, 0x26, 0x78, 0x1e, 0x4d, 0xa2, 0x59, 0x46, 0xed, 0x99, 0x4c, 0xa1, 0x2f, 0x99, 0x62,
	0x02, 0xf3, 0xde, 0x24, 0x9e, 0x8d, 0x16, 0xd9, 0x5c, 0x6e, 0xe6, 0x2f, 0x46, 0xa1, 0xde, 0x28,
	0x56, 0x90, 0x5a, 0xe1, 0xc7, 0xf7, 0x09, 0x24, 0xfa, 0x28, 0x79, 0xde, 0x73, 0x9a, 0x39, 0x93,
	0x31, 0xa4, 0x07, 0xb6, 0x6f, 0x79, 0x1e, 0x5b, 0xd1, 0x0d, 0xc5, 0x14, 0xd2, 0x95, 0x52, 0x8d,
	0x22, 0x39, 0x0c, 0x04, 0x47, 0x64, 0xbb, 0xf0, 0xa5, 0x30, 0x16, 0xef, 0x11, 0xf4, 0x29, 0xc7,
	0x76, 0xaf, 0xc9, 0x2d, 0x80, 0xe2, 0xaf, 0x2d, 0x47, 0xbd, 0xae, 0xb6, 0xfe, 0xb9, 0xcc, 0x2b,
	0xcf, 0x5b, 0x72, 0x03, 0x99, 0xae, 0x04, 0x47, 0xcd, 0x84, 0xb4, 0xec, 0x98, 0x76, 0x82, 0x59,
	0x8a, 0x1b, 0x14, 0xe6, 0x71, 0xb7, 0x94, 0x85, 0x53, 0x6f, 0x9c, 0xec, 0x9d, 0xfc, 0xb6, 0xf7,
	0x47, 0x04, 0xe7, 0xbe, 0x3a, 0xa4, 0x8e, 0x6c, 0xb8, 0x58, 0xed, 0x6a, 0xa6, 0x5b, 0x15, 0xd2,
	0x77, 0xc2, 0x1f, 0xa9, 0xc6, 0x90, 0x32, 0x3c, 0xd6, 0xa5, 0xad, 0x65, 0x48, 0xdd, 0x40, 0xee,
	0x61, 0x18, 0xfe, 0x9e, 0x8f, 0x32, 0x32, 0x51, 0x3c, 0x98, 0x7e, 0x99, 0x45, 0x0b, 0x17, 0x5d,
	0x1a, 0x94, 0x4d, 0x8d, 0xfc, 0x7f, 0x2d, 0xdd, 0xc1, 0x40, 0xd9, 0xb2, 0x43, 0x4d, 0x60, 0xc0,
	0xae, 0x7f, 0x1a, 0xac, 0xc5, 0x03, 0x0c, 0x03, 0x96, 0x2c, 0x21, 0x59, 0xbd, 0xf1, 0x92, 0x5c,
	0x9e, 0x24, 0x0c, 0xd5, 0x5c, 0x8f, 0xbf, 0x8b, 0x2e, 0x61, 0x71, 0xb6, 0xe9, 0xdb, 0xbb, 0xb8,
	0xfc, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x6b, 0x3e, 0xfb, 0xfc, 0xa5, 0x02, 0x00, 0x00,
}
